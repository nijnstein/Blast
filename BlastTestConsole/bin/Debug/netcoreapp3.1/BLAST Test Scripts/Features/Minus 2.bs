

# double negation and +- (that is kept because of 2 being a defined constant see test 1 of minus)
# the optimizer will convert this into a suba instruction with 2 paramters (which is more efficient to execute)

c = - 1 + - 2; 	


# compiler node tree
# 
#    root of 1 
#       assignment of c 
#          operation Substract 
#          constant parameter 1 
#          operation Add 
#          operation Substract 
#          constant parameter 2 
#       /
#    /
#
#           
# 000  001 040 013 128 085 086 000     # suba encodes 3 parameters which is NOT correct, the optimizer fails matching on pattern suba3

    

#validate c -3
 